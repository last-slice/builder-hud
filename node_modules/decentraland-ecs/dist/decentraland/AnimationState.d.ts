import { ObservableComponent } from '../ecs/Component';
/** @public */
export declare type AnimationParams = {
    looping?: boolean;
    speed?: number;
    weight?: number;
    layer?: number;
};
/**
 * @public
 */
export declare class AnimationState extends ObservableComponent {
    /**
     * Name of the animation in the model
     */
    readonly clip: string;
    /**
     * Does the animation loop?, default: true
     */
    looping: boolean;
    /**
     * Weight of the animation, values from 0 to 1, used to blend several animations. default: 1
     */
    weight: number;
    /**
     * Is the animation playing? default: true
     */
    playing: boolean;
    /**
     * Does any anyone asked to reset the animation? default: false
     */
    shouldReset: boolean;
    /**
     * The animation speed
     */
    speed: number;
    /**
     * Layering allows you to have two or more levels of animation on an object's parameters at the same time
     */
    layer: number;
    constructor(clip: string, params?: AnimationParams);
    /**
     * Sets the clip parameters
     */
    setParams(params: AnimationParams): this;
    toJSON(): any;
    /**
     * Starts the animation
     */
    play(reset?: boolean): void;
    /**
     * Pauses the animation
     */
    pause(): void;
    /**
     * Resets the animation state to the frame 0
     */
    reset(): void;
    /**
     * Resets and pauses the animation
     */
    stop(): void;
}
